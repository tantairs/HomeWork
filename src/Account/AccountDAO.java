package Account;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;

import ConnectionManager.ConnectionManager;

public class AccountDAO {
	
	static Connection currentCon = null; 
	static ResultSet rs = null; //It is a table of data representing a database result set, generated by executing a statement that queries the database. A ResultSet object maintains a cursor pointing to its current row of data. Initially the cursor is positioned before the first row. The next method moves the cursor to the next row and it returns false when there are no more rows in the ResultSet object

	public static AccountBean getAccount (AccountBean bean, String a_number) {
		
		Statement stmt = null;
		String selectQuery = "select * from ADMINISTRATOR.ACCOUNT where a_number='" + a_number + "'";
		System.out.println("Query: "+ selectQuery);
		
		try { 
			 //connect to DB 
			 currentCon = ConnectionManager.getConnection(); 
			 stmt=currentCon.createStatement(); 
			 
			 rs = stmt.executeQuery(selectQuery); 
			 
			 boolean more = rs.next();
			
			 
			 // if user does not exist set the isValid variable to false 
			 if (!more) { 
				 System.out.println("Sorry, your Account is not valid"); 
				 bean.setValid(false); 
			 } 
			 //if history exists set the isValid variable to true 
			 else if (more) { 
								 			 
				 bean.setA_number(rs.getString("a_number"));
				 bean.setC_id(rs.getInt("c_id"));
				 bean.setAmount(rs.getFloat("amount"));
				 bean.setOpening_date(rs.getDate("opening_date"));
				 bean.setClosing_date(rs.getDate("closing_date"));

				 bean.setValid(true);
				 
			 } 
		 } 
		 catch (Exception ex) { 
			 System.out.println("Account failed: An Exception has occurred! " + ex); 
		 } 
		 //some exception handling 
		 finally { 
			 if (rs != null) { 
				 try { 
					 rs.close();
				 } 
				 catch (Exception e) {} 
				 rs = null; 
			} 
			if (stmt != null) { 
				try { 
					stmt.close(); 
				} 
				catch (Exception e) {} 
				stmt = null; 
			} 
			if (currentCon != null) { 
				try { 
					currentCon.close(); 
				} 
				catch (Exception e) {} 
				currentCon = null; 
			} 
		 } 
		
		
		return bean;
	}

}
